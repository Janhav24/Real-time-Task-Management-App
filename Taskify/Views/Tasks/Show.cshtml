@model Taskify.Models.Task
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> _userManager
<div class="d-flex justify-content-center">

    <a class="btn btn-outline-success" href="/Projects/Show/@Model.ProjectId">Back to project</a>


</div>

@if (TempData["message"] != null)
{
    <div class="alert @TempData["messageType"]">
        @TempData["message"]
    </div>
}

<div class="card">



    <div class="card-body">

        <h3 class="card-title alert-success py-3 px-3 rounded-2">@Model.Title</h3>
        @if(Model.User is not null){
            <div class="card-text">@Model.User.UserName</div>
        }
        <div class="card-text">@Model.Description</div>
        <div class="card-text">@Model.StartDate</div>
        <div class="card-text">@Model.EndDate</div>
        <div class="card-text">@Model.Status</div>


    </div>
    @if (Model.Project.UserId == _userManager.GetUserId(User) || User.IsInRole("Admin"))
    {
        <form method="POST" asp-controller="Tasks" asp-action="AddUser">
            <div class="d-flex flex-row justify-content-center p-3 border-1 border-top">
                <div>
                    <input type="hidden" name="TaskId" value=@Model.Id />
                    <select name="UserId" class="form-control">
                        @if (Model.User is null)
                        {
                            <option selected>Add a user for this task</option>

                            @foreach (var user in ViewBag.Users)
                            {
                                <option value=@user.UserId>@user.User.UserName</option>
                            }
                        }else{
                            @foreach (var user in ViewBag.Users)
                            {
                                if (Model.UserId == user.UserId)
                                {
                                    <option selected value=@user.UserId>@user.User.UserName</option>
                                }else{
                                    <option value=@user.UserId>@user.User.UserName</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div>
                    <input type="submit" class="btn btn-success alert-success" value="+" />
                </div>
            </div>
        </form>
        

    
        <div class="d-flex flex-row justify-content-between">

            <a class="btn btn-success" href="/Tasks/Edit/@Model.Id">Edit task info</a>

            <form method="post" action="/Tasks/Delete/@Model.Id">

                <button class="btn btn-danger" type="submit">Delete task</button>

            </form>

        </div>
    }
    <div class="d-flex flex-row justify-content-center p-3 border-1 border-top">

        @using (Html.BeginForm(actionName: "ChangeStatus", controllerName: "Tasks",
        method: FormMethod.Post,
        routeValues: new { id = Model.Id }))
        {
            <input type="hidden" name="TaskId" value=@Model.Id />
            @Html.Label("Status", "Task Status")
            <br />
            @Html.DropDownList("newStatus", new SelectList(Model.Statuses, "Value", "Text", ViewBag.CurrentStatus), null, new { @class = "form-control" })

    
            <div>
                <input type="submit" class="btn btn-success alert-success" value="Modify status" />
            </div>
        }
    </div>
</div>

<br />
<br />

@* Afisare tskuri impreuna cu butoanele de editare si stergere *@
@if (Model.Comments is not null)
{
    @foreach (var comm in Model.Comments)
    {
        <div class="container">
            <div class="row">
                <div class="col-md-2"></div>

                <div class="col-md-8">

                    <div>

                        <p>@comm.Content</p>
                        <small>@comm.Date</small><br />
                        @if (comm.User is not null)
                        {
                            <small>@comm.User.UserName</small><br />
                        }

                    </div>
                    <br>
                    @if (comm.Task.Project is not null)
                    {
                        @if (comm.UserId == _userManager.GetUserId(User) || User.IsInRole("Admin")
                                      || comm.Task.Project.UserId == _userManager.GetUserId(User))
                        {
                            <div class="d-flex">

                                <div>

                                    <a class="btn btn-outline-primary" href="/Comments/Edit/@comm.Id"><i class="bi bi-pencil-square"></i>Edit Comment</a>

                                </div>



                                <div>

                                    <form method="post" action="/Comments/Delete/@comm.Id">

                                        <button class="btn btn-outline-danger" type="submit"><i class="bi bi-trash"></i>Delete Comment</button>

                                    </form>

                                </div>

                            </div>
                        }
                    }

                    <br />

                </div>

                <div class="col-md-2"></div>

            </div>

        </div>
    }
}

@* Afisarea formularului in care se poate adauga un comentariu *@

<div class="container">

    <div class="row">

        <div class="col-md-2"></div>

        <div class="col-md-8">

            <div class="card">

                <form method="post" action="/Tasks/Show/@Model.Id">

                    <div class="card-body">

                        <input type="hidden" name="TaskId" value="@Model.Id" />

                        <label>Comm info</label>
                        <br />
                        <label>Content</label>
                        <textarea class="form-control" name="Content"></textarea>

                        @Html.ValidationMessage("Content", null, new { @class = "text-danger"})

                        <br /><br />

                        @Html.ValidationSummary(false, "", new { @class = "textdanger" })

                        <button class="btn btn-success " type="submit">Add a comm</button>

                    </div>

                </form>

            </div>

        </div>

        <div class="col-md-2"></div>

    </div>

</div>