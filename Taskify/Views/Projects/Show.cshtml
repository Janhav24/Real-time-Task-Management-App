@model Taskify.Models.Project
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> _userManager


<div class="d-flex justify-content-center">

    <a class="btn btn-outline-success" href="/Projects/Index/">Show all projects</a>

    <a class="btn btn-outline-success" href="/Projects/New">Add new project</a>

</div>

<br />

<div class="card">



    <div class="card-body">

        <h3 class="card-title alert-success py-3 px-3 rounded-2">@Model.Title</h3>

        <div class="card-text">@Model.Description</div>
        <div class="d-flex justify-content-between flex-row mt-5">
            @if (Model.User is not null)
            {
                <div><i class="bi bi-globe"></i>@Model.User.UserName</div>
            }

        </div>

    </div>

    

    <div class="d-flex flex-row justify-content-between">
        @if (Model.UserId == _userManager.GetUserId(User) || User.IsInRole("Admin"))
        {
        <a class="btn btn-success" href="/Projects/Edit/@Model.Id">Edit project info</a>
            <form method="post" action="/Projects/Delete/@Model.Id">

            <button class="btn btn-danger" type="submit"><i class="bi bi-trash"></i></button>

        </form>
        }
        <a class="btn btn-success" href="/Projects/Users/@Model.Id">Users</a>

    </div>

</div>

<br />
<br />
<div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
    <label class="form-check-label" for="flexSwitchCheckDefault">Show only my tasks</label>
</div>

<div id="id_user_sesiune" class="hide">
    @_userManager.GetUserId(User)
</div>

@* Afisare tskuri impreuna cu butoanele de editare si stergere *@
@if (Model.Tasks is not null)
{
    @foreach (var task in Model.Tasks)
    {
        <div class="container taskuri">
            <div class="row">
                <div class="col-md-2"></div>

                <div class="col-md-8">

                    <div>

                        <p>@task.Title</p>
                        <small>@task.Status</small><br/>
                        @if (task.User is not null)
                        {
                            <div class="hide id_user_task">
                                @task.UserId
                            </div>
                            <small>@task.User.UserName</small>
                        }
                    </div>
                    <br>

                    <div class="d-flex">

                        <div>

                            <a class="btn btn-outline-primary" href="/Tasks/Edit/@task.Id"><i class="bi bi-pencil-square"></i>Edit task</a>

                        </div>

                        <div>
                            @if (Model.UserId == _userManager.GetUserId(User) || User.IsInRole("Admin"))
                            {
                                <form method="post" action="/Tasks/Delete/@task.Id">

                                    <button class="btn btn-outline-danger" type="submit"><i class="bi bi-trash"></i>Delete Task</button>

                                </form>
                            }
                        </div>
                        <div>
                            <a class="btn btn-success" href="/Tasks/Show/@task.Id">Show Task</a>
                    </div>
                        <br/>
                    </div>

                    <br />

                </div>

                <div class="col-md-2"></div>

            </div>

        </div>
    }
}

@* Afisarea formularului in care se poate adauga un task *@
@if(Model.UserId == _userManager.GetUserId(User) || User.IsInRole("Admin"))
{

<div class="container">

    <div class="row">

        <div class="col-md-2"></div>

        <div class="col-md-8">

            <div class="card">

                <form method="post" action="/Projects/Show/@Model.Id">

                    <div class="card-body">

                        <input type="hidden" name="ProjectId" value="@Model.Id" />

                        <input type="hidden" name="Status" value="not started" />

                        <label>Task info</label>
                        <br />
                        <lable>Task title</lable>
                        <textarea class="form-control" name="Title"></textarea>

                        @Html.ValidationMessage("Title", null, new { @class = "text-danger"})

                        <br /><br />
                        <label>Task description</label>
                        <textarea class="form-control" name="Description"></textarea>
                        <br /><br />

                        <label>Start date</label>
                        <input type = "date" name="StartDate" />
                        <br/>
                        <label>End date</label>
                        <input type="date" name="EndDate" />
                        <br /><br/>
                        @Html.ValidationSummary(false, "", new { @class = "textdanger" })

                        <button class="btn btn-success " type="submit">Add a task</button>

                    </div>

                </form>

            </div>

        </div>

        <div class="col-md-2"></div>

    </div>

</div>
}